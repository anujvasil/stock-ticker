{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Charts.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { chartData } from \"./Tickers.js\";\nconst options = {\n  legend: {\n    display: false\n  },\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    },\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {}\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      distribution: \"series\",\n      time: {\n        displayFormats: {\n          minute: 'h:mm:ss a'\n        }\n      },\n      ticks: {\n        display: false\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n};\n\nfunction Charts() {\n  _s();\n\n  const [data, setData] = useState([]);\n  let x = 1;\n  useEffect(() => {\n    let data = []; //let date = new Date();\n\n    x = x + 1;\n    data.push({\n      x: x,\n      y: chartData.get(\"GTBY\")[chartData.get(\"GTBY\").length - 1]\n    });\n    setData(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        //labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          type: 'line',\n          backgroundColor: \"black\",\n          borderColor: \"#5AC53B\",\n          borderWidth: 2,\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: '#5AC53B',\n          pointHoverBorderColor: '#000000',\n          pointHoverBorderWidth: 4,\n          pointHoverRadius: 6,\n          //data: chartData.get(\"GTBY\"),\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Charts, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js"],"names":["React","useState","useEffect","Line","chartData","options","legend","display","hover","intersect","elements","line","tension","point","radius","maintainAspectRatio","tooltips","mode","callbacks","scales","xAxes","type","distribution","time","displayFormats","minute","ticks","yAxes","gridLines","Charts","data","setData","x","push","y","get","length","datasets","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE;AADR,GAJK;AAOZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE;AADP,KADA;AAINC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AAJD,GAPE;AAeZC,EAAAA,mBAAmB,EAAE,KAfT;AAgBZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENR,IAAAA,SAAS,EAAE,KAFL;AAGNS,IAAAA,SAAS,EAAE;AAHL,GAhBE;AAsBZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,YAAY,EAAE,QAFlB;AAGIC,MAAAA,IAAI,EAAE;AACFC,QAAAA,cAAc,EAAE;AACZC,UAAAA,MAAM,EAAE;AADI;AADd,OAHV;AAQIC,MAAAA,KAAK,EAAE;AACHnB,QAAAA,OAAO,EAAE;AADN;AARX,KADG,CADH;AAgBJoB,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,SAAS,EAAE;AACPrB,QAAAA,OAAO,EAAE;AADF,OADf;AAIImB,MAAAA,KAAK,EAAE;AACHnB,QAAAA,OAAO,EAAE;AADN;AAJX,KADG;AAhBH;AAtBI,CAAhB;;AAoDA,SAASsB,MAAT,GAAkB;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI+B,CAAC,GAAG,CAAR;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI4B,IAAI,GAAG,EAAX,CAFY,CAGZ;;AACAE,IAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAU;AAACD,MAAAA,CAAC,EAAEA,CAAJ;AAAOE,MAAAA,CAAC,EAAE9B,SAAS,CAAC+B,GAAV,CAAc,MAAd,EAAsB/B,SAAS,CAAC+B,GAAV,CAAc,MAAd,EAAsBC,MAAtB,GAA+B,CAArD;AAAV,KAAV;AACAL,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEH,GARQ,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AACR;AACAO,QAAAA,QAAQ,EAAE,CACN;AACIhB,UAAAA,IAAI,EAAE,MADV;AAEIiB,UAAAA,eAAe,EAAE,OAFrB;AAGIC,UAAAA,WAAW,EAAE,SAHjB;AAIIC,UAAAA,WAAW,EAAE,CAJjB;AAKIC,UAAAA,gBAAgB,EAAE,kBALtB;AAMIC,UAAAA,oBAAoB,EAAE,kBAN1B;AAOIC,UAAAA,yBAAyB,EAAE,SAP/B;AAQIC,UAAAA,qBAAqB,EAAE,SAR3B;AASIC,UAAAA,qBAAqB,EAAE,CAT3B;AAUIC,UAAAA,gBAAgB,EAAE,CAVtB;AAWI;AACAhB,UAAAA,IAAI,EAAEA;AAZV,SADM;AAFF,OAAZ;AAmBF,MAAA,OAAO,EAAEzB;AAnBP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAxCQwB,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Charts.css\";\nimport {Line} from \"react-chartjs-2\";\nimport {chartData} from \"./Tickers.js\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    hover: {\n        intersect: false\n    },\n    elements: {\n        line: {\n            tension: 0\n        },\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                distribution: \"series\",\n                time: {\n                    displayFormats: {\n                        minute: 'h:mm:ss a'\n                    }\n                },\n                ticks: {\n                    display: false,\n                }\n\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    display: false,\n                },\n            },\n        ],\n    },\n};\n\n\nfunction Charts() {\n\n    const [data, setData] = useState([]);\n    let x = 1;\n\n    useEffect(() => {\n\n        let data = [];\n        //let date = new Date();\n        x=x+1;\n        data.push({x: x, y: chartData.get(\"GTBY\")[chartData.get(\"GTBY\").length - 1]});\n        setData(data)\n\n    });\n\n    return (\n        <div className=\"charts_wrapper\">\n            <Line data={{\n                //labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n                datasets: [\n                    {\n                        type: 'line',\n                        backgroundColor: \"black\",\n                        borderColor: \"#5AC53B\",\n                        borderWidth: 2,\n                        pointBorderColor: 'rgba(0, 0, 0, 0)',\n                        pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                        pointHoverBackgroundColor: '#5AC53B',\n                        pointHoverBorderColor: '#000000',\n                        pointHoverBorderWidth: 4,\n                        pointHoverRadius: 6,\n                        //data: chartData.get(\"GTBY\"),\n                        data: data\n                    },\n                ],\n            }}\n          options={options}\n            />\n        </div>\n    )\n}\n\n\n\n\n\n\nexport default Charts"]},"metadata":{},"sourceType":"module"}