{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Charts.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { chartData } from \"./Tickers.js\";\nconst options = {\n  title: {\n    display: true,\n    text: 'Custom Chart Title',\n    font: 'Monospace',\n    fontSize: 22\n  },\n  legend: {\n    display: false\n  },\n  hover: {\n    intersect: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    },\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {}\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      },\n      ticks: {\n        display: false\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n};\n\nfunction Charts() {\n  _s();\n\n  const [graphData, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      let date = new Date();\n      setData(graphData.concat({\n        x: date,\n        y: chartData.get(\"GTBY\")[chartData.get(\"GTBY\").length - 1]\n      }));\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          type: 'line',\n          backgroundColor: \"black\",\n          borderColor: \"#5AC53B\",\n          borderWidth: 2,\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: '#5AC53B',\n          pointHoverBorderColor: '#000000',\n          pointHoverBorderWidth: 4,\n          pointHoverRadius: 6,\n          //data: chartData.get(\"GTBY\"),\n          data: graphData\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Charts, \"s2KgJzjy/nEZYOZVMzvGnd5ndnw=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js"],"names":["React","useState","useEffect","Line","chartData","options","title","display","text","font","fontSize","legend","hover","intersect","elements","line","tension","point","radius","maintainAspectRatio","tooltips","mode","callbacks","scales","xAxes","type","time","format","tooltipFormat","ticks","yAxes","gridLines","Charts","graphData","setData","setTimeout","date","Date","concat","x","y","get","length","datasets","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","data"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Charts.css\";\nimport {Line} from \"react-chartjs-2\";\nimport {chartData} from \"./Tickers.js\";\n\nconst options = {\n    title: {\n        display: true,\n        text: 'Custom Chart Title',\n        font: 'Monospace',\n        fontSize: 22,\n    },\n    legend: {\n        display: false,\n    },\n    hover: {\n        intersect: false\n    },\n    elements: {\n        line: {\n            tension: 0\n        },\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n                ticks: {\n                    display: false,\n                }\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    display: false,\n                },\n            },\n        ],\n    },\n};\n\n\nfunction Charts() {\n\n    const [graphData, setData] = useState([]);\n\n    useEffect(() => {\n        setTimeout(() => {\n\n            let date = new Date();\n            setData(graphData.concat({x: date, y: chartData.get(\"GTBY\")[chartData.get(\"GTBY\").length - 1]}));\n\n\n        }, 1000);\n    });\n\n    return (\n        <div className=\"charts_wrapper\">\n            <Line data={{\n                datasets: [\n                    {\n                        type: 'line',\n                        backgroundColor: \"black\",\n                        borderColor: \"#5AC53B\",\n                        borderWidth: 2,\n                        pointBorderColor: 'rgba(0, 0, 0, 0)',\n                        pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                        pointHoverBackgroundColor: '#5AC53B',\n                        pointHoverBorderColor: '#000000',\n                        pointHoverBorderWidth: 4,\n                        pointHoverRadius: 6,\n                        //data: chartData.get(\"GTBY\"),\n                        data: graphData\n                    },\n                ],\n            }}\n          options={options}\n            />\n        </div>\n    )\n}\n\n\n\n\n\n\nexport default Charts"]},"metadata":{},"sourceType":"module"}