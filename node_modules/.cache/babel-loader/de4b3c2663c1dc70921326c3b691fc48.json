{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Charts.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { chartData } from \"./Tickers.js\";\nimport { show } from \"./Tickers.js\";\n\nfunction Charts(props) {\n  _s();\n\n  const [graphData, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      let date = new Date();\n\n      try {\n        setData(graphData.concat({\n          x: date,\n          y: chartData.get(props.name)[chartData.get(props.name).length - 1]\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          datasets: [{\n            type: 'line',\n            backgroundColor: \"black\",\n            borderColor: \"#5AC53B\",\n            borderWidth: 2,\n            pointBorderColor: 'rgba(0, 0, 0, 0)',\n            pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n            pointHoverBackgroundColor: '#5AC53B',\n            pointHoverBorderColor: '#000000',\n            pointHoverBorderWidth: 4,\n            pointHoverRadius: 6,\n            data: graphData\n          }]\n        },\n        options: {\n          title: {\n            display: true,\n            text: props.name,\n            font: 'monospace',\n            fontSize: 25\n          },\n          legend: {\n            display: false\n          },\n          hover: {\n            intersect: false\n          },\n          elements: {\n            line: {\n              tension: 0\n            },\n            point: {\n              radius: 0\n            }\n          },\n          maintainAspectRatio: false,\n          tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {}\n          },\n          scales: {\n            xAxes: [{\n              type: \"time\",\n              time: {\n                format: \"MM/DD/YY\"\n              },\n              ticks: {\n                display: false\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Charts, \"s2KgJzjy/nEZYOZVMzvGnd5ndnw=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js"],"names":["React","useState","useEffect","Line","chartData","show","Charts","props","graphData","setData","setTimeout","date","Date","concat","x","y","get","name","length","error","console","log","datasets","type","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","data","title","display","text","font","fontSize","legend","hover","intersect","elements","line","tension","point","radius","maintainAspectRatio","tooltips","mode","callbacks","scales","xAxes","time","format","ticks","yAxes","gridLines"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,IAAR,QAAmB,cAAnB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAAC,MAAM;AAEb,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AACA,UAAG;AACCH,QAAAA,OAAO,CAACD,SAAS,CAACK,MAAV,CAAiB;AACrBC,UAAAA,CAAC,EAAEH,IADkB;AAErBI,UAAAA,CAAC,EAAEX,SAAS,CAACY,GAAV,CAAcT,KAAK,CAACU,IAApB,EAA0Bb,SAAS,CAACY,GAAV,CAAcT,KAAK,CAACU,IAApB,EAA0BC,MAA1B,GAAmC,CAA7D;AAFkB,SAAjB,CAAD,CAAP;AAIH,OALD,CAMA,OAAOC,KAAP,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAGJ,KAdS,EAcP,IAdO,CAAV;AAeH,GAhBQ,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AACRG,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,IAAI,EAAE,MADV;AAEIC,YAAAA,eAAe,EAAE,OAFrB;AAGIC,YAAAA,WAAW,EAAE,SAHjB;AAIIC,YAAAA,WAAW,EAAE,CAJjB;AAKIC,YAAAA,gBAAgB,EAAE,kBALtB;AAMIC,YAAAA,oBAAoB,EAAE,kBAN1B;AAOIC,YAAAA,yBAAyB,EAAE,SAP/B;AAQIC,YAAAA,qBAAqB,EAAE,SAR3B;AASIC,YAAAA,qBAAqB,EAAE,CAT3B;AAUIC,YAAAA,gBAAgB,EAAE,CAVtB;AAWIC,YAAAA,IAAI,EAAEzB;AAXV,WADM;AADF,SAAZ;AAiBF,QAAA,OAAO,EAAE;AACL0B,UAAAA,KAAK,EAAE;AACHC,YAAAA,OAAO,EAAE,IADN;AAEHC,YAAAA,IAAI,EAAE7B,KAAK,CAACU,IAFT;AAGHoB,YAAAA,IAAI,EAAE,WAHH;AAIHC,YAAAA,QAAQ,EAAE;AAJP,WADF;AAOLC,UAAAA,MAAM,EAAE;AACJJ,YAAAA,OAAO,EAAE;AADL,WAPH;AAULK,UAAAA,KAAK,EAAE;AACHC,YAAAA,SAAS,EAAE;AADR,WAVF;AAaLC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE;AACFC,cAAAA,OAAO,EAAE;AADP,aADA;AAINC,YAAAA,KAAK,EAAE;AACHC,cAAAA,MAAM,EAAE;AADL;AAJD,WAbL;AAqBLC,UAAAA,mBAAmB,EAAE,KArBhB;AAsBLC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE,OADA;AAENR,YAAAA,SAAS,EAAE,KAFL;AAGNS,YAAAA,SAAS,EAAE;AAHL,WAtBL;AA4BLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CACH;AACI7B,cAAAA,IAAI,EAAE,MADV;AAEI8B,cAAAA,IAAI,EAAE;AACFC,gBAAAA,MAAM,EAAE;AADN,eAFV;AAKIC,cAAAA,KAAK,EAAE;AACHpB,gBAAAA,OAAO,EAAE;AADN;AALX,aADG,CADH;AAYJqB,YAAAA,KAAK,EAAE,CACH;AACIC,cAAAA,SAAS,EAAE;AACPtB,gBAAAA,OAAO,EAAE;AADF,eADf;AAIIoB,cAAAA,KAAK,EAAE;AACHpB,gBAAAA,OAAO,EAAE;AADN;AAJX,aADG;AAZH;AA5BH;AAjBP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4EH;;GAlGQ7B,M;;KAAAA,M;AAyGT,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Charts.css\";\nimport {Line} from \"react-chartjs-2\";\nimport {chartData} from \"./Tickers.js\";\nimport {show} from \"./Tickers.js\";\n\nfunction Charts(props) {\n\n    const [graphData, setData] = useState([]);\n\n    useEffect(() => {\n        setTimeout(() => {\n\n            let date = new Date();\n            try{\n                setData(graphData.concat({\n                    x: date,\n                    y: chartData.get(props.name)[chartData.get(props.name).length - 1]\n                }));\n            }\n            catch (error){\n                console.log(error)\n            }\n\n\n        }, 1000);\n    });\n\n    return (\n        <div className=\"test\">\n        <div className=\"charts_wrapper\">\n            <Line data={{\n                datasets: [\n                    {\n                        type: 'line',\n                        backgroundColor: \"black\",\n                        borderColor: \"#5AC53B\",\n                        borderWidth: 2,\n                        pointBorderColor: 'rgba(0, 0, 0, 0)',\n                        pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                        pointHoverBackgroundColor: '#5AC53B',\n                        pointHoverBorderColor: '#000000',\n                        pointHoverBorderWidth: 4,\n                        pointHoverRadius: 6,\n                        data: graphData,\n                    },\n                ],\n            }}\n          options={{\n              title: {\n                  display: true,\n                  text: props.name,\n                  font: 'monospace',\n                  fontSize: 25,\n              },\n              legend: {\n                  display: false,\n              },\n              hover: {\n                  intersect: false\n              },\n              elements: {\n                  line: {\n                      tension: 0\n                  },\n                  point: {\n                      radius: 0,\n                  },\n              },\n              maintainAspectRatio: false,\n              tooltips: {\n                  mode: \"index\",\n                  intersect: false,\n                  callbacks: {\n                  },\n              },\n              scales: {\n                  xAxes: [\n                      {\n                          type: \"time\",\n                          time: {\n                              format: \"MM/DD/YY\",\n                          },\n                          ticks: {\n                              display: false,\n                          }\n                      },\n                  ],\n                  yAxes: [\n                      {\n                          gridLines: {\n                              display: false,\n                          },\n                          ticks: {\n                              display: false,\n                          },\n                      },\n                  ],\n              },\n          }}\n            />\n        </div>\n        </div>\n    )\n}\n\n\n\n\n\n\nexport default Charts"]},"metadata":{},"sourceType":"module"}