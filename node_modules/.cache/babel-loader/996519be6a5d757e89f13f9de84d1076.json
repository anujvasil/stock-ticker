{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Charts.css\";\nimport { Line } from \"react-chartjs-2\";\nimport { chartData } from \"./Tickers.js\";\n\nfunction Charts(props) {\n  _s();\n\n  const [graphData, setData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      let date = new Date();\n\n      try {\n        setData(graphData.concat({\n          x: date,\n          y: chartData.get(props.name)[chartData.get(props.name).length - 1]\n        }));\n      } catch (error) {}\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          type: 'line',\n          backgroundColor: \"black\",\n          borderColor: \"#5AC53B\",\n          borderWidth: 2,\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: '#5AC53B',\n          pointHoverBorderColor: '#000000',\n          pointHoverBorderWidth: 4,\n          pointHoverRadius: 6,\n          data: graphData\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: props.name,\n          font: 'Monospace',\n          fontSize: 25\n        },\n        legend: {\n          display: false\n        },\n        hover: {\n          intersect: false\n        },\n        elements: {\n          line: {\n            tension: 0\n          },\n          point: {\n            radius: 0\n          }\n        },\n        maintainAspectRatio: false,\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          callbacks: {}\n        },\n        scales: {\n          xAxes: [{\n            type: \"time\",\n            time: {\n              format: \"MM/DD/YY\",\n              tooltipFormat: \"ll\"\n            },\n            ticks: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              display: false\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Charts, \"s2KgJzjy/nEZYOZVMzvGnd5ndnw=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/anujvasil/WebstormProjects/gatsbyproject/src/Charts.js"],"names":["React","useState","useEffect","Line","chartData","Charts","props","graphData","setData","setTimeout","date","Date","concat","x","y","get","name","length","error","datasets","type","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","data","title","display","text","font","fontSize","legend","hover","intersect","elements","line","tension","point","radius","maintainAspectRatio","tooltips","mode","callbacks","scales","xAxes","time","format","tooltipFormat","ticks","yAxes","gridLines"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Charts.css\";\nimport {Line} from \"react-chartjs-2\";\nimport {chartData} from \"./Tickers.js\";\n\n\nfunction Charts(props) {\n\n    const [graphData, setData] = useState([]);\n\n    useEffect(() => {\n        setTimeout(() => {\n\n            let date = new Date();\n            try{\n                setData(graphData.concat({x: date, y: chartData.get(props.name)[chartData.get(props.name).length - 1]}));\n            }\n            catch (error){}\n\n\n        }, 1000);\n    });\n\n    return (\n        <div className=\"charts_wrapper\">\n            <Line data={{\n                datasets: [\n                    {\n                        type: 'line',\n                        backgroundColor: \"black\",\n                        borderColor: \"#5AC53B\",\n                        borderWidth: 2,\n                        pointBorderColor: 'rgba(0, 0, 0, 0)',\n                        pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                        pointHoverBackgroundColor: '#5AC53B',\n                        pointHoverBorderColor: '#000000',\n                        pointHoverBorderWidth: 4,\n                        pointHoverRadius: 6,\n                        data: graphData\n                    },\n                ],\n            }}\n          options={{\n              title: {\n                  display: true,\n                  text: props.name,\n                  font: 'Monospace',\n                  fontSize: 25,\n              },\n              legend: {\n                  display: false,\n              },\n              hover: {\n                  intersect: false\n              },\n              elements: {\n                  line: {\n                      tension: 0\n                  },\n                  point: {\n                      radius: 0,\n                  },\n              },\n              maintainAspectRatio: false,\n              tooltips: {\n                  mode: \"index\",\n                  intersect: false,\n                  callbacks: {\n                  },\n              },\n              scales: {\n                  xAxes: [\n                      {\n                          type: \"time\",\n                          time: {\n                              format: \"MM/DD/YY\",\n                              tooltipFormat: \"ll\",\n                          },\n                          ticks: {\n                              display: false,\n                          }\n                      },\n                  ],\n                  yAxes: [\n                      {\n                          gridLines: {\n                              display: false,\n                          },\n                          ticks: {\n                              display: false,\n                          },\n                      },\n                  ],\n              },\n          }}\n            />\n        </div>\n    )\n}\n\n\n\n\n\n\nexport default Charts"]},"metadata":{},"sourceType":"module"}